{"ast":null,"code":"var _jsxFileName = \"/home/lauralimon/challengs/MINESWEEPIN/src/components/Cell.jsx\";\nimport React, { useContext, useEffect, Fragment } from 'react'; //import { BoardActions } from '../actions/BoardActions';\n\nimport actionsName from '../actions/actionsName';\nimport { dispatchContext, stateContext } from '../Game';\nimport './Cell.scss';\nexport function Cell(props) {\n  const dispatch = useContext(dispatchContext);\n  const {\n    gameOver,\n    level,\n    isStarted,\n    winner\n  } = useContext(stateContext);\n  let {\n    hasMine,\n    isOpen,\n    countMinesAround,\n    row,\n    column,\n    hasFlag\n  } = props.cellInfo;\n  useEffect(() => {\n    if (isOpen && hasMine) dispatch({\n      type: actionsName.GAME_OVER\n    });\n  }, [isOpen, dispatch, hasMine]); // ojooooooooooo , dispatch, hasMine\n\n  function handleCellClick() {\n    if (hasFlag || gameOver || winner) return;\n\n    if (!isStarted) {\n      dispatch({\n        type: actionsName.CREATE_STARTED_GAME_BOARD,\n        payload: {\n          level,\n          row,\n          column\n        }\n      });\n    }\n\n    dispatch({\n      type: actionsName.UNCOVER_CELL,\n      payload: {\n        row,\n        column\n      }\n    });\n  } // function onCellDoubleClick() {\n  //   if (gameOver) return;\n  //   dispatch({ type: actionsName.DOUBLE_CLICK_CELL, payload: { row, column } })\n  // }\n\n\n  function handleCellRightClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (gameOver || isOpen) return;\n    dispatch({\n      type: actionsName.RIGHT_CLICK_CELL,\n      payload: {\n        row,\n        column\n      }\n    });\n    return false;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `cell ${isOpen ? 'open' : ''}\n           ${hasFlag ? 'noHover' : ''}`,\n    onClick: handleCellClick // onDoubleClick={onCellDoubleClick}\n    ,\n    onContextMenu: e => handleCellRightClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `\n          cell_content _${countMinesAround} \n          ${hasMine && isOpen || hasMine && gameOver ? 'mine' : ''} \n          ${hasFlag ? 'hasFlag' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, countMinesAround && !hasMine && isOpen ? countMinesAround : '')));\n}","map":{"version":3,"sources":["/home/lauralimon/challengs/MINESWEEPIN/src/components/Cell.jsx"],"names":["React","useContext","useEffect","Fragment","actionsName","dispatchContext","stateContext","Cell","props","dispatch","gameOver","level","isStarted","winner","hasMine","isOpen","countMinesAround","row","column","hasFlag","cellInfo","type","GAME_OVER","handleCellClick","CREATE_STARTED_GAME_BOARD","payload","UNCOVER_CELL","handleCellRightClick","e","preventDefault","stopPropagation","RIGHT_CLICK_CELL"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,SAA9C;AAEA,OAAO,aAAP;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAC1B,QAAMC,QAAQ,GAAGR,UAAU,CAACI,eAAD,CAA3B;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,MAAyCZ,UAAU,CAACK,YAAD,CAAzD;AACA,MAAI;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,gBAAnB;AAAqCC,IAAAA,GAArC;AAA0CC,IAAAA,MAA1C;AAAkDC,IAAAA;AAAlD,MAA8DX,KAAK,CAACY,QAAxE;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,IAAID,OAAd,EAAuBL,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEjB,WAAW,CAACkB;AAApB,KAAD,CAAR;AACxB,GAFQ,EAEN,CAACP,MAAD,EAASN,QAAT,EAAmBK,OAAnB,CAFM,CAAT,CAN0B,CAQM;;AAEhC,WAASS,eAAT,GAA2B;AACzB,QAAIJ,OAAO,IAAIT,QAAX,IAAuBG,MAA3B,EAAmC;;AACnC,QAAI,CAACD,SAAL,EAAgB;AACdH,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAEjB,WAAW,CAACoB,yBADX;AAEPC,QAAAA,OAAO,EAAE;AAAEd,UAAAA,KAAF;AAASM,UAAAA,GAAT;AAAcC,UAAAA;AAAd;AAFF,OAAD,CAAR;AAID;;AACDT,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEjB,WAAW,CAACsB,YADX;AAEPD,MAAAA,OAAO,EAAE;AAAER,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAFF,KAAD,CAAR;AAID,GAtByB,CAwB1B;AACA;AACA;AACA;;;AAEA,WAASS,oBAAT,CAA8BC,CAA9B,EAAiC;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACA,QAAIpB,QAAQ,IAAIK,MAAhB,EAAwB;AACxBN,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEjB,WAAW,CAAC2B,gBAApB;AAAsCN,MAAAA,OAAO,EAAE;AAAER,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAA/C,KAAD,CAAR;AACA,WAAO,KAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EACN,QAAOH,MAAM,GAAG,MAAH,GAAY,EAAG;aAC1BI,OAAO,GAAG,SAAH,GAAe,EAAG,EAHhC;AAKE,IAAA,OAAO,EAAEI,eALX,CAME;AANF;AAOE,IAAA,aAAa,EAAGK,CAAD,IAAOD,oBAAoB,CAACC,CAAD,CAP5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AACE,IAAA,SAAS,EAAG;0BACIZ,gBAAiB;YAC9BF,OAAO,IAAIC,MAAZ,IAAwBD,OAAO,IAAIJ,QAAnC,GAA+C,MAA/C,GAAwD,EAAG;YAC3DS,OAAO,GAAG,SAAH,GAAe,EAAG,EAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOIH,gBAAgB,IAAI,CAACF,OAArB,IAAgCC,MAAjC,GAA2CC,gBAA3C,GAA8D,EAPjE,CATF,CADF,CADF;AAwBD","sourcesContent":["import React, { useContext, useEffect, Fragment } from 'react';\n\n//import { BoardActions } from '../actions/BoardActions';\nimport actionsName from '../actions/actionsName';\nimport { dispatchContext, stateContext } from '../Game';\n\nimport './Cell.scss';\n\nexport function Cell(props) {\n  const dispatch = useContext(dispatchContext);\n  const { gameOver, level, isStarted, winner } = useContext(stateContext);\n  let { hasMine, isOpen, countMinesAround, row, column, hasFlag } = props.cellInfo;\n\n\n  useEffect(() => {\n    if (isOpen && hasMine) dispatch({ type: actionsName.GAME_OVER });\n  }, [isOpen, dispatch, hasMine]) // ojooooooooooo , dispatch, hasMine\n\n  function handleCellClick() {\n    if (hasFlag || gameOver || winner) return;\n    if (!isStarted) {\n      dispatch({\n        type: actionsName.CREATE_STARTED_GAME_BOARD,\n        payload: { level, row, column }\n      });\n    }\n    dispatch({\n      type: actionsName.UNCOVER_CELL,\n      payload: { row, column }\n    });\n  }\n\n  // function onCellDoubleClick() {\n  //   if (gameOver) return;\n  //   dispatch({ type: actionsName.DOUBLE_CLICK_CELL, payload: { row, column } })\n  // }\n\n  function handleCellRightClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (gameOver || isOpen) return;\n    dispatch({ type: actionsName.RIGHT_CLICK_CELL, payload: { row, column } });\n    return false;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={\n          `cell ${isOpen ? 'open' : ''}\n           ${hasFlag ? 'noHover' : ''}`\n        }\n        onClick={handleCellClick}\n        // onDoubleClick={onCellDoubleClick}\n        onContextMenu={(e) => handleCellRightClick(e)}\n      >\n        <div\n          className={`\n          cell_content _${countMinesAround} \n          ${(hasMine && isOpen) || (hasMine && gameOver) ? 'mine' : ''} \n          ${hasFlag ? 'hasFlag' : ''}`\n          }\n        >\n          {(countMinesAround && !hasMine && isOpen) ? countMinesAround : ''}\n        </div>\n      </div>\n    </Fragment>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}