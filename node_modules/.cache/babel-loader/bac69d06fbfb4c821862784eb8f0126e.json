{"ast":null,"code":"var _jsxFileName = \"/home/lauralimon/challengs/MINESWEEPIN/src/components/Board.jsx\";\nimport React, { useEffect, useContext, Fragment } from 'react';\nimport './Board.scss';\nimport { Cell } from './Cell';\nimport { stateContext, dispatchContext } from '../Game';\nimport { BoardActions } from '../actions/BoardActions';\nimport { CurrentLevel } from '../constants/gameConstants';\nexport function Board() {\n  const state = useContext(stateContext);\n  const dispatch = useContext(dispatchContext);\n  useEffect(() => {\n    dispatch({\n      type: BoardActions.INITIATE_DUMMY_BOARD,\n      payload: {\n        level: CurrentLevel.INTERMEDIATE\n      }\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    style: {\n      gridTemplateRows: `repeat(${state.level.rows}, 35px)`,\n      gridTemplateColumns: `repeat(${state.level.columns}, 35px)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, state.gameOver ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gameOver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"GAME OVER\") : null), /*#__PURE__*/React.createElement(React.Fragment, null, state.board.map((row, i) => row.map((cell, j) => /*#__PURE__*/React.createElement(Cell, {\n    cellInfo: { ...cell,\n      row: i,\n      column: j\n    },\n    key: [i, j],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 36\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/lauralimon/challengs/MINESWEEPIN/src/components/Board.jsx"],"names":["React","useEffect","useContext","Fragment","Cell","stateContext","dispatchContext","BoardActions","CurrentLevel","Board","state","dispatch","type","INITIATE_DUMMY_BOARD","payload","level","INTERMEDIATE","gridTemplateRows","rows","gridTemplateColumns","columns","gameOver","board","map","row","i","cell","j","column"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,cAAP;AAEA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,SAA9C;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,OAAO,SAASC,KAAT,GAAiB;AACtB,QAAMC,KAAK,GAAGR,UAAU,CAACG,YAAD,CAAxB;AACA,QAAMM,QAAQ,GAAGT,UAAU,CAACI,eAAD,CAA3B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,YAAY,CAACM,oBADZ;AAEPC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAEP,YAAY,CAACQ;AAAtB;AAFF,KAAD,CAAR;AAID,GALQ,EAKN,CAACL,QAAD,CALM,CAAT;AAOA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,KAAK,EACH;AACEM,MAAAA,gBAAgB,EAAG,UAASP,KAAK,CAACK,KAAN,CAAYG,IAAK,SAD/C;AAEEC,MAAAA,mBAAmB,EAAG,UAAST,KAAK,CAACK,KAAN,CAAYK,OAAQ;AAFrD,KAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,0CAEIV,KAAK,CAACW,QAAN,gBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,GAGS,IALb,CARF,eAgBE,0CAEIX,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAMC,CAAN,KACdD,GAAG,CAACD,GAAJ,CAAQ,CAACG,IAAD,EAAOC,CAAP,kBAAa,oBAAE,IAAF;AACnB,IAAA,QAAQ,EACN,EACE,GAAGD,IADL;AAEEF,MAAAA,GAAG,EAAEC,CAFP;AAGEG,MAAAA,MAAM,EAAED;AAHV,KAFiB;AAQnB,IAAA,GAAG,EAAE,CAACF,CAAD,EAAIE,CAAJ,CARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADF,CAFJ,CAhBF,CADF,CADF;AAsCD","sourcesContent":["import React, { useEffect, useContext, Fragment } from 'react';\nimport './Board.scss';\n\nimport { Cell } from './Cell';\n\nimport { stateContext, dispatchContext } from '../Game';\nimport { BoardActions } from '../actions/BoardActions';\n\nimport { CurrentLevel } from '../constants/gameConstants';\n\nexport function Board() {\n  const state = useContext(stateContext);\n  const dispatch = useContext(dispatchContext);\n\n  useEffect(() => {\n    dispatch({\n      type: BoardActions.INITIATE_DUMMY_BOARD,\n      payload: { level: CurrentLevel.INTERMEDIATE }\n    });\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <div\n        className=\"board\"\n        style={\n          {\n            gridTemplateRows: `repeat(${state.level.rows}, 35px)`,\n            gridTemplateColumns: `repeat(${state.level.columns}, 35px)`,\n          }\n        }>\n        <>\n          {\n            state.gameOver ?\n              <div className=\"gameOver\">\n                GAME OVER\n            </div> : null\n          }\n        </>\n        <>\n          {\n            state.board.map((row, i) =>\n              row.map((cell, j) => < Cell\n                cellInfo={\n                  {\n                    ...cell,\n                    row: i,\n                    column: j\n                  }\n                }\n                key={[i, j]} />)\n            )\n          }\n        </>\n\n\n      </div>\n    </Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}